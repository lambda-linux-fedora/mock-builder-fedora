#!/usr/bin/env python2
# Copyright 2016 Atihita Inc.

import os
import shutil


# Copied from yum because fedora's dnf does not support this.
def splitFilename(filename):
    """
    Pass in a standard style rpm fullname

    Return a name, version, release, epoch, arch, e.g.::
        foo-1.0-1.i386.rpm returns foo, 1.0, 1, i386
        1:bar-9-123a.ia64.rpm returns bar, 9, 123a, 1, ia64
    """

    if filename[-4:] == '.rpm':
        filename = filename[:-4]

    archIndex = filename.rfind('.')
    arch = filename[archIndex + 1:]

    relIndex = filename[:archIndex].rfind('-')
    rel = filename[relIndex + 1:archIndex]

    verIndex = filename[:relIndex].rfind('-')
    ver = filename[verIndex + 1:relIndex]

    epochIndex = filename.find(':')
    if epochIndex == -1:
        epoch = ''
    else:
        epoch = filename[:epochIndex]

    name = filename[epochIndex + 1:verIndex]
    return name, ver, rel, epoch, arch


class Main(object):
    def __init__(self):
        pass

    def run(self):
        rpm_files = []

        for f in os.listdir('/var/lib/mock/fedora-latest-x86_64/result'):
            if f[-8:] == '.src.rpm':
                srpm_file = f
                continue

            if f[-4:] == '.rpm':
                rpm_files.append(f)
                continue

        print('SRPM: %s' % srpm_file)
        print('RPMs: %r' % rpm_files)

        (name, version, release, epoch, arch) = splitFilename(srpm_file)

        output_build_toppath = '/home/ll-user/mock-builder-fedora/build-artifacts/{name}/{version}/{release}'.format(
            name=name, version=version, release=release)

        if not os.path.exists(output_build_toppath):
            os.makedirs(output_build_toppath)

        srpm_pkg_path = '{toppath}/src'.format(toppath=output_build_toppath)
        if not os.path.exists(srpm_pkg_path):
            os.makedirs(srpm_pkg_path)
        shutil.copy(
            '/var/lib/mock/fedora-latest-x86_64/result/{srpm}'.format(
                srpm=srpm_file),
            srpm_pkg_path)

        for rpm in rpm_files:
            (n, v, r, e, a) = splitFilename(rpm)
            rpm_pkg_path = '{toppath}/{arch}'.format(
                toppath=output_build_toppath, arch=a)
            if not os.path.exists(rpm_pkg_path):
                os.makedirs(rpm_pkg_path)
            shutil.copy(
                '/var/lib/mock/fedora-latest-x86_64/result/{rpm}'.format(
                    rpm=rpm),
                rpm_pkg_path)


if __name__ == '__main__':
    main = Main()
    main.run()
